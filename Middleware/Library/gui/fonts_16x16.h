#ifndef ZQ_FONT_16X16_H
#define ZQ_FONT_16X16_H
#include<zq_font_base.h>

namespace GUI
{
    namespace Font
    {
// #pragma DATA_SECTION(".const")
        const FontChar fonts_16x16[] = {
            // "你"
            {
                .name = "你",
                .width = 16,
                .height = 16,
                .data = (const unsigned char[]){
                    0x10, 0x10, 0x10, 0x88, 0x88, 0x4C, 0x2C, 0x0A, 0x89, 0x88, 0x48, 0x48, 0x28, 0x08, 0x08, 0x08,
                    0x01, 0x01, 0x01, 0x7F, 0x40, 0x20, 0x04, 0x04, 0x14, 0x24, 0x24, 0x44, 0x44, 0x04, 0x05, 0x02
                }
            }, // "是"
            {
                .name = "是",
                .width = 16,
                .height = 16,
                .data = (const unsigned char[]){
                    0xF8, 0x08, 0x08, 0xF8, 0x08, 0x08, 0xF8, 0x00, 0xFF, 0x80, 0x88, 0x88, 0x88, 0x94, 0xA2, 0xC1,
                    0x0F, 0x08, 0x08, 0x0F, 0x08, 0x08, 0x0F, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x7F
                }
            }, // "我"
            {
                .name = "我",
                .width = 16,
                .height = 16,
                .data = (const unsigned char[]){
                    0x20, 0x70, 0x1E, 0x10, 0x10, 0xFF, 0x10, 0x10, 0x50, 0x30, 0x18, 0x16, 0x10, 0x10, 0xD4, 0x08,
                    0x02, 0x0A, 0x12, 0x12, 0x02, 0x7F, 0x02, 0x22, 0x22, 0x12, 0x0C, 0x44, 0x4A, 0x51, 0x60, 0x40
                }
            }, // "未"
            {
                .name = "未",
                .width = 16,
                .height = 16,
                .data = (const unsigned char[]){
                    0x80, 0x80, 0x80, 0xFC, 0x80, 0x80, 0x80, 0xFF, 0xC0, 0xA0, 0x90, 0x88, 0x84, 0x83, 0x80, 0x80,
                    0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x7F, 0x01, 0x02, 0x04, 0x08, 0x10, 0x60, 0x00, 0x00
                }
            }, // "曾"
            {
                .name = "曾",
                .width = 16,
                .height = 16,
                .data = (const unsigned char[]){
                    0x10, 0x20, 0xFC, 0x84, 0x94, 0xA4, 0xFC, 0x00, 0xF8, 0x08, 0x08, 0xF8, 0x08, 0x08, 0xF8, 0x08,
                    0x04, 0x02, 0x1F, 0x10, 0x14, 0x12, 0x1F, 0x00, 0x0F, 0x08, 0x08, 0x0F, 0x08, 0x08, 0x0F, 0x08
                }
            }, // "1"
            {
                .name = "1",
                .width = 8,
                .height = 16,
                .data = (const unsigned char[]){
                    0x00, 0x00, 0x00, 0x10, 0x1C, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x7C, 0x00, 0x00
                }
            }, // "2"
            {
                .name = "2",
                .width = 8,
                .height = 16,
                .data = (const unsigned char[]){
                    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x40, 0x20, 0x10, 0x08, 0x04, 0x42, 0x7E, 0x00, 0x00
                }
            }, // "3"
            {
                .name = "3",
                .width = 8,
                .height = 16,
                .data = (const unsigned char[]){
                    0x00, 0x00, 0x00, 0x3C, 0x42, 0x42, 0x40, 0x20, 0x18, 0x20, 0x40, 0x42, 0x42, 0x3C, 0x00, 0x00
                }
            }, // end
            {
                .name = nullptr,
                .width = 0,
                .height = 0,
                .data = nullptr
            },
        };

    }
}
#endif
